{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gunad\\\\Downloads\\\\salon-booking-agent-nodocker\\\\frontend\\\\src\\\\components\\\\ChatWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatWidget() {\n  _s();\n  const [messages, setMessages] = useState([{\n    from: \"bot\",\n    text: \"Hello 👋 I’m your Salon Assistant. How can I help you today?\",\n    quickReplies: [\"Haircut\", \"Shaving\", \"Trimming\", \"Facewash\", \"Manicure\", \"Pedicure\"]\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const sendMessage = async overrideText => {\n    const finalText = overrideText || input;\n    if (!finalText.trim()) return;\n    const userMessage = {\n      from: \"user\",\n      text: finalText\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    setLoading(true);\n    try {\n      const res = await fetch(\"http://localhost:4000/api/agent/message\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: finalText\n        })\n      });\n      const data = await res.json();\n      const botMessage = {\n        from: \"bot\",\n        text: data.reply || \"⚠️ Something went wrong\",\n        quickReplies: data.suggestions || []\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        from: \"bot\",\n        text: \"⚠️ Error connecting to server\"\n      }]);\n    }\n    setLoading(false);\n  };\n  const handleQuickReply = text => sendMessage(text);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-widget-header\",\n      children: \"\\uD83D\\uDC87 Salon Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-widget-messages\",\n      children: [messages.map((m, i) => {\n        var _m$quickReplies;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${m.from}`,\n          children: [m.from === \"bot\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: \"\\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-text\",\n            children: m.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), m.from === \"bot\" && ((_m$quickReplies = m.quickReplies) === null || _m$quickReplies === void 0 ? void 0 : _m$quickReplies.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quick-replies\",\n            children: m.quickReplies.map((qr, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleQuickReply(qr),\n              children: qr\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), m.from === \"user\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: \"\\uD83E\\uDDD1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 35\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this);\n      }), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: [\"\\uD83E\\uDD16 Salon Assistant is typing\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"animate-pulse\",\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 83\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-widget-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendMessage(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWidget, \"AJukWLlw08N07zRVbk88l/+L+Bg=\");\n_c = ChatWidget;\nvar _c;\n$RefreshReg$(_c, \"ChatWidget\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","ChatWidget","_s","messages","setMessages","from","text","quickReplies","input","setInput","loading","setLoading","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","overrideText","finalText","trim","userMessage","prev","res","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","suggestions","err","handleQuickReply","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","m","i","_m$quickReplies","length","qr","idx","onClick","ref","value","onChange","e","target","onKeyDown","key","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/gunad/Downloads/salon-booking-agent-nodocker/frontend/src/components/ChatWidget.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nexport default function ChatWidget() {\n  const [messages, setMessages] = useState([\n    { from: \"bot\", text: \"Hello 👋 I’m your Salon Assistant. How can I help you today?\", quickReplies: [\"Haircut\", \"Shaving\", \"Trimming\", \"Facewash\", \"Manicure\", \"Pedicure\"] }\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  const sendMessage = async (overrideText) => {\n    const finalText = overrideText || input;\n    if (!finalText.trim()) return;\n\n    const userMessage = { from: \"user\", text: finalText };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    setLoading(true);\n\n    try {\n      const res = await fetch(\"http://localhost:4000/api/agent/message\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ message: finalText })\n      });\n      const data = await res.json();\n      const botMessage = { from: \"bot\", text: data.reply || \"⚠️ Something went wrong\", quickReplies: data.suggestions || [] };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (err) {\n      setMessages(prev => [...prev, { from: \"bot\", text: \"⚠️ Error connecting to server\" }]);\n    }\n    setLoading(false);\n  };\n\n  const handleQuickReply = (text) => sendMessage(text);\n\n  return (\n    <div className=\"chat-widget\">\n      <div className=\"chat-widget-header\">💇 Salon Assistant</div>\n      <div className=\"chat-widget-messages\">\n        {messages.map((m, i) => (\n          <div key={i} className={`message ${m.from}`}>\n            {m.from === \"bot\" && <div className=\"avatar\">🤖</div>}\n            <div className=\"message-text\">{m.text}</div>\n            {m.from === \"bot\" && m.quickReplies?.length > 0 && (\n              <div className=\"quick-replies\">\n                {m.quickReplies.map((qr, idx) => (\n                  <button key={idx} onClick={() => handleQuickReply(qr)}>{qr}</button>\n                ))}\n              </div>\n            )}\n            {m.from === \"user\" && <div className=\"avatar\">🧑</div>}\n          </div>\n        ))}\n        {loading && <div className=\"typing-indicator\">🤖 Salon Assistant is typing<span className=\"animate-pulse\">...</span></div>}\n        <div ref={messagesEndRef}></div>\n      </div>\n      <div className=\"chat-widget-input\">\n        <input value={input} onChange={e => setInput(e.target.value)} onKeyDown={e => e.key === \"Enter\" && sendMessage()} placeholder=\"Type a message...\" />\n        <button onClick={() => sendMessage()}>Send</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}